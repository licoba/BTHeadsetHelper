# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
#     branches: [main]
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
#   pull_request:
#     branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: |
          echo "开始进行release构建" 
          ./gradlew assembleRelease
          echo "release构建完毕"
        # run: echo "上传apk至Artifacts"
      # - name: Upload Apk
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: BTHeadsetHelper
      #     path: app/build/outputs/apk/release/app-release.apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: BTHeadsetHelper.apk
          asset_content_type: application/zip
